#!/usr/bin/env bash

# script/test: Run test suite for application. Optionally pass in a path to an
#              individual test file to run a single test.


set -e

cd "$(dirname "$0")/.."

echo -e "\n=> Starting script/test"

if ! [ -z "$1" ]; then
  PYTEST_ARGS=( $1 )
fi

if [ "$ENVIRONMENT" = testing ]; then
  # if executed and the environment is already set to `test`, then we want a
  # clean from scratch application. This almost always means a ci environment,
  # since we set the environment to `test` directly in `script/cibuild`.
  script/setup
  PYTEST_ARGS=( --cov=app --cov-report=xml )
else
  # if the environment isn't set to `test`, set it to `test` and update the
  # application to ensure all dependencies are met as well as any other things
  # that need to be up to date, like db migrations. The environment not having
  # already been set to `test` almost always means this is being called on its
  # own from a `development` environment.
  export ENVIRONMENT="testing"

  script/update
fi

echo -e "\n==> Running testsâ€¦"

if [ -n "$PYTEST_ARGS" ]; then
  # pass arguments to test call. This is useful for calling a single test.
  poetry run python -m pytest -s "${PYTEST_ARGS[@]}"
else
  poetry run python -m pytest
fi

echo -e "\n=> Finished script/test\n"